// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

/**
 * 根据你的schema文件，生成Prisma Client代码，执行npx prisma generate生成Prisma Client，用于与数据库交互
 * npx prisma generate 生成客户端代码
 * 使用migrate命令进行数据库迁移，将schema中的变化实施到数据库中
 * npx prisma migrate dev --name init 创建并应用迁移
 * npx prisma migrate deploy 将所有待应用的迁移应用到生产数据库
 * npx prisma migrate reset 重置数据库并重新应用所有迁移（会清空数据）
 * npx prisma db pull 从数据库拉取最新的表结构到 schema.prisma 文件中
 * npx prisma db push 直接将模型同步到数据库（不生成迁移文件）
 * npx prisma studio 可视化数据库
 */

generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
  previewFeatures = ["driverAdapters"] // 提前体验新特性的功能
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name        String
  slug        String   @unique(map: "product_slug_idx")
  category    String
  description String
  images      String[]
  price       Decimal  @default(0) @db.Decimal(12, 2)
  brand       String
  rating      Decimal  @default(0) @db.Decimal(3, 2)
  numReviews  Int      @default(0)
  stock       Int
  isFeatured  Boolean
  banner      String?
  createdAt   DateTime @default(now()) @db.Timestamptz(6)
}
